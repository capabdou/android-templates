name: Review pull request

on:
  pull_request:
    types: [ opened, edited, reopened, synchronize ]

jobs:
  review_pull_request:
    name: Review pull request
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: template-compose
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Checkout source code
        uses: actions/checkout@v2.3.2

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up google-services.json on template-compose
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
          GOOGLE_SERVICES_JSON_STAGING: ${{ secrets.GOOGLE_SERVICES_JSON_STAGING }}
        run: |
          mkdir -p template-compose/app/src/production
          echo $GOOGLE_SERVICES_JSON > template-compose/app/src/production/google-services.json
          mkdir -p template-compose/app/src/staging
          echo $GOOGLE_SERVICES_JSON_STAGING > template-compose/app/src/staging/google-services.json

      - name: Run Detekt
        run: ./gradlew detekt

      - name: Run Android Lint
        run: ./gradlew lint

      - name: Run unit tests with Kover
        run: ./gradlew koverMergedXmlReport

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Bundle and check environment versions
        run: |
          echo 'Install Bundle'
          bundle config path vendor/bundle
          bundle install
          echo 'Check environment setup versions'
          ruby --version
          gem --version
          bundler --version

      - name: Run Danger
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bundle exec danger
