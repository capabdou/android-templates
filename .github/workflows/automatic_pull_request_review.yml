name: Automatic pull request review

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  review_pull_request:
    name: Pull request review by Danger
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Checkout source code
        uses: actions/checkout@v2.3.2

      - name: Load Gradle cached
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Run Detekt and generate Detekt reports
      - name: Run Detekt on CoroutineTemplate
        working-directory: ./CoroutineTemplate
        run: ./gradlew detekt

      - name: Run Detekt on RxJavaTemplate
        working-directory: ./RxJavaTemplate
        run: ./gradlew detekt

      # Run Android Lint and generate Lint reports
      - name: Run Android Lint on RxJavaTemplate
        working-directory: ./RxJavaTemplate      
        run: ./gradlew lint

      - name: Run Android Lint on CoroutineTemplate
        working-directory: ./CoroutineTemplate      
        run: ./gradlew lint

      # TODO: Update to support test coverage report from Jacoco for Coroutine Template
      # Run Unit Test & Jacoco for code coverage for RxJavaTemplate
      - name: Run unit tests & Jacoco on RxJavaTemplate
        working-directory: ./RxJavaTemplate
        run: ./gradlew jacocoTestReport

      # Setup Ruby gems and Bundle for executing danger-ruby
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle install and version check
        run: |
          echo 'Install Bundle'
          bundle config path vendor/bundle
          bundle install
          echo 'Check environment setup versions'
          ruby --version
          gem --version
          bundler --version

      - name: Run Danger
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bundle exec danger
