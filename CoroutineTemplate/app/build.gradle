plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

def keystorePropertiesFile = rootProject.file("signing.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            // Remember to edit signing.properties to have the correct info for release build.
            storeFile file('../keystore_production')
            storePassword keystoreProperties['KEYSTORE_PASSWORD']
            keyPassword keystoreProperties['KEY_PASSWORD']
            keyAlias keystoreProperties['KEY_ALIAS']
        }
    }

    compileSdkVersion android_compile_sdk_version
    defaultConfig {
        applicationId "co.nimblehq.coroutine"
        minSdkVersion android_min_sdk_version
        targetSdkVersion android_target_sdk_version
        versionCode android_version_code
        versionName android_version_name
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            buildConfigField("String", "BASE_API_URL", "\"https://jsonplaceholder.typicode.com/\"")
        }
        debug {
            // For quickly testing build with proguard, enable this
            minifyEnabled false
            buildConfigField("String", "BASE_API_URL", "\"https://jsonplaceholder.typicode.com/\"")
        }
    }

    flavorDimensions "stage"
    productFlavors {
        production
        staging {
            applicationIdSuffix ".staging"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    composeOptions {
        kotlinCompilerVersion kotlin_version
        kotlinCompilerExtensionVersion compose_version
    }

    buildFeatures {
        viewBinding true
        compose true
    }
}

dependencies {
    implementation(
        project(':data'),
        project(':domain'),

        fileTree(dir: 'libs', include: ['*.jar']),

        "androidx.activity:activity-ktx:$androidx_activity_ktx_version",
        "androidx.appcompat:appcompat:$androidx_support_version",
        "androidx.constraintlayout:constraintlayout:$constraint_layout_version",
        "androidx.core:core-ktx:$androidx_core_ktx_version",
        "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle_version",

        "androidx.compose.ui:ui:$compose_version",
        "androidx.compose.ui:ui-tooling:$compose_version",
        "androidx.compose.foundation:foundation:$compose_version",
        "androidx.compose.material:material:$compose_version",

        "androidx.navigation:navigation-fragment-ktx:$androidx_navigation_version",
        "androidx.navigation:navigation-runtime-ktx:$androidx_navigation_version",
        "androidx.navigation:navigation-ui-ktx:$androidx_navigation_version",

        "com.google.dagger:hilt-android:$hilt_version",

        "com.jakewharton.timber:timber:$timber_log_version",

        "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
        "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    )

    kapt(
        "com.google.dagger:hilt-compiler:$hilt_version"
    )
}
